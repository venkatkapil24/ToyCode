        !********************************************************
        !*                      TOYCODE-1.0                     *
        !*                                                      *
        !*      A MD PLATFORM FOR TESTING ENHANCED              *
        !*      SAMPLING ALGORITHMS.                            *
        !*                                                      *
        !*      DEVELOPED BY VENKAT KAPIL                       *
        !*      CONTACT : venkat@iitk.ac.in                     *
        !*                                                      *
        !*      COPYRIGHT (C) 2014 VENKAT KAPIL                 *
        !*      SOME RIGHTS RESERVED.                           *
        !*                                                      *                                                       
        !********************************************************

	!THIS FILE CONTAINS SUBROUTINES THAT PRINT. 
	!THEY ARE AS FOLLOWS:
	!	*) PRINT_LABEL 
	!	*) PRINT_COMMENT
	!	*) PRINT_PARAM
	!	*) PRINT_MOLDYN

	!SUBROUTINE *) PRINT_LABEL
	SUBROUTINE PRINT_LABEL( FILENAME )
	IMPLICIT NONE
	CHARACTER (LEN=1000)	 DUMMY
	CHARACTER (LEN =*) 	 FILENAME
	INTEGER			 REASON
	!OPENS FILE.
	OPEN( UNIT =1, FILE = FILENAME, STATUS = 'OLD',
     &	POSITION = 'APPEND' )
	!PRINTS THE LABEL.
	WRITE(1,*) "*************************************************"
	WRITE(1,*) "*                 TOYCODE-1.0                   *"
        WRITE(1,*) "*                                               *"
        WRITE(1,*) "*      A MD PLATFORM FOR TESTING ENHANCED       *"
        WRITE(1,*) "*      SAMPLING ALGORITHMS.                     *"
        WRITE(1,*) "*                                               *"
        WRITE(1,*) "*      DEVELOPED BY VENKAT KAPIL                *"
        WRITE(1,*) "*      CONTACT : venkat@iitk.ac.in              *"
        WRITE(1,*) "*                                               *"
        WRITE(1,*) "*      COPYRIGHT (C) 2014 VENKAT KAPIL          *"
        WRITE(1,*) "*      SOME RIGHTS RESERVED.                    *"
        WRITE(1,*) "*                                               *"                                                       
        WRITE(1,*) "!************************************************"
	WRITE(1,*) 
	CLOSE(1)
	RETURN
	END SUBROUTINE

	!SUBROUTINE *) PRINT_COMMENT
        SUBROUTINE PRINT_COMMENT( FILENAME, COMMENT )
        IMPLICIT NONE
	CHARACTER (LEN=*) FILENAME, COMMENT
	!OPENS FILE.
	OPEN( UNIT =1, FILE = FILENAME, STATUS = 'OLD', 
     &	POSITION ='APPEND' )
	!PRINTS THE COMMENT.
	WRITE(1,*) COMMENT
	CLOSE(1)
	RETURN
	END SUBROUTINE

	!SUBROUTINE *) PRINT_PARAM
	!THIS SUBROUTINE PRINTS ALL PARAMETERS.
	SUBROUTINE PRINT_PARAM
	USE PARAM
        USE UMBRSAMP
        USE METADYN
	USE FORCEFIELD
	IMPLICIT NONE
	INTEGER ITER1, ITER2
	CHARACTER (LEN=50) FORMAT01, FORMAT02, FORMAT03
	FORMAT01 = '(T1,A,T40,A,T50,E12.3)'
	FORMAT02 = '(T1,A,T40,A,T50,I10)'
	FORMAT03 = '(T1,A,T40,A,T50,L10)'
	!OPENS THE OUTPUT FILE.
	OPEN(UNIT=1, FILE = OUTPUTFILE, STATUS = 'OLD',
     &	POSITION = 'APPEND')
	!PRINTS MESSAGE.
	WRITE(1,*) 'MOLECULAR DYNAMICS PARAMETERS:' 
	!PRINTS MD PARAMETERS.
	WRITE(1,FORMAT01) 'TEMPERATURE', ':', TEMP
	WRITE(1,FORMAT01) 'MASS', ':', MASS
	WRITE(1,FORMAT02) 'NUMBER OF DIMENSIONS', ':', NDIM
	WRITE(1,FORMAT02) 'NUMBER OF WELLS', ':', NWELL
	WRITE(1,FORMAT01) 'ENERGY BARRIER', ':', BARRIER
	WRITE(1,FORMAT01) 'TIMESTEP', ':', DT
	WRITE(1,FORMAT02) 'MD STEPS', ':', N
	WRITE(1,FORMAT03) 'THERMOSTAT', ':', THERMSTAT
	WRITE(1,*) 
	!PRINTS MESSAGE.
	IF( UMBR .EQV. .TRUE. ) THEN
	WRITE(1,*) 'UMBRELLA SAMPLING PARAMETERS:' 
	!UPDATES FORMAT STATEMENTS.
		WRITE(FORMAT01,'(A16,I1,A6)') '(T1,A,T40,A,T50,', 
     &		UMBR_DIM,'E12.3)'
       		WRITE(FORMAT02,'(A16,I1,A4)') '(T1,A,T40,A,T50,', 
     &		UMBR_DIM,'I10)'
		WRITE(FORMAT03,'(A16,I1,A20)') '(T1,A,T40,A,T50,',
     &          UMBR_DIM,'(A,E12.3,A,E12.3,A))'
	!PRINTS UMBRELLA SAMPLING PARAMETERS.       
		WRITE(1,FORMAT02) 'NUMBER OF DIMENSIONS', ':', UMBR_DIM
	        WRITE(1,FORMAT02) 'RESTRAINED COMPONENTS', ':',
     &		(UMBR_COMP(ITER1), ITER1=1,UMBR_DIM)
		WRITE(1,*) 'FORCE CONSTANTS', ':',
     &          (UMBR_K(ITER1), ITER1=1,UMBR_DIM) 
		WRITE(1,FORMAT02) 'NUMBER OF UMBRELLAS', ':',
     &          (UMBR_N(ITER1), ITER1=1,UMBR_DIM)
		WRITE(1,FORMAT03) 'RANGE', ':', 
     &		('[',UMBR_RANGE(ITER1,1),',',UMBR_RANGE(ITER1,2),']', 
     &          ITER1=1,UMBR_DIM)
		WRITE(1,*) 
	ENDIF
	IF( META .EQV. .TRUE. ) THEN
	!PRINTS MESSAGE.
		WRITE(1,*) 'METADYNAMICS PARAMETERS:'
	!UPDATES FORMAT STATEMENTS.
		FORMAT01 = '(T1,A,T40,A,T50,2E12.3)'
                WRITE(FORMAT02,'(A16,I1,A4)') '(T1,A,T40,A,T50,',
     &          META_DIM,'I10)'
	!PRINTS METADYNAMICS PARAMETERS.
                WRITE(1,FORMAT02) 'NUMBER OF DIMENSIONS', ':', META_DIM
                WRITE(1,FORMAT02) 'CV COMPONENTS', ':',
     &          (META_CV(ITER1), ITER1=1,META_DIM)
                WRITE(1,FORMAT01) 'WIDTH OF GAUSSIAN', ':', WIDTH
		WRITE(1,FORMAT01) 'INITIAL HEIGHT OF GAUSSIAN', ':', HEIGHT
		WRITE(1,FORMAT02) 'METADYNAMICS STEPS', ':', META_N
		WRITE(1,FORMAT01) 
     &		'MIN AND MAX METADYNAMICS TIME',':',
     &		META_TMIN, META_TMAX
		WRITE(1,*) 
	ENDIF
	!PRINTS MESSAGE.
	WRITE(1,*) 'FORCEFIELD PARAMETERS:'
	!UPDATES FORMAT STATEMENTS.
        FORMAT01 = '(T1,A,T40,A,T50,E12.3)'
        WRITE(FORMAT03,'(A16,I1,A20)') '(T1,A,T40,A,T50,',
     &          NDIM,'E12.3)'
        !PRINTS FORCE FIELD PARAMETERS.
	DO ITER2 = 1,NWELL+1
		WRITE(1,*) 'MINIMUM POTENTIAL', ':', V(ITER2)
		WRITE(1,*) 'COEFFICIENT', ':', A(ITER2)
		WRITE(1,*) 'LOCATION OF WELL', ':', 
     &		(RO(ITER1,ITER2), ITER1=1,NDIM)
		WRITE(1,*)  
	ENDDO
	CLOSE(1)
	RETURN
	END SUBROUTINE 

	! SUBROUTINE *) PRINT_MOLDYN
	! THIS SUBROUTINE PRINTS THE DYNAMICS VARIABLES IN THE FOLLOWING FILES.
	!	1) OUTPUTFILE	:	PRINTS EVERYTHING.
	!	2) ENERGYFILE	:	PRINTS TIME, ENERGY AND TEMPERATURE.
	!	3) TRAJFILE	:	PRINTS TIME, POSITION, VELOCITY AND ACCLERATION.
	SUBROUTINE PRINT_MOLDYN
        USE PARAM
        USE UMBRSAMP
        USE METADYN
        USE CONSTANTS
        USE FORCEFIELD
        USE DYNAMICS_MOLDYN
        IMPLICIT NONE
	INTEGER ITER
        CHARACTER (LEN=50) FORMAT01, FORMAT02, FORMAT03
	!ASSIGNS FORMAT STATEMENTS.
        FORMAT01 = '(T1,A,T40,A,T50,E12.3)'
        FORMAT02 = '(T1,A,T40,A,T50,I10)'
        WRITE(FORMAT03,'(A16,I1,A20)') '(T1,A,T40,A,T50,',
     &          NDIM,'E12.3)'
	!OPENS THE OUTPUT FILE.
        OPEN(UNIT=1, FILE = OUTPUTFILE, STATUS = 'OLD',
     &  POSITION = 'APPEND')
	!PRINTS DYNAMICS VARIABLES IN OUTPUTFILE.
	WRITE(1,FORMAT02) 'ITERATION', ':', ITER_MOLDYN
	WRITE(1,FORMAT01) 'TIME', ':', TIME
        WRITE(1,FORMAT03) 'POSITION', ':', (POS(ITER), ITER=1,NDIM)
        WRITE(1,FORMAT03) 'VELOCITY', ':', (VEL(ITER), ITER=1,NDIM)
        WRITE(1,FORMAT03) 'ACCLERATION', ':',(ACCL(ITER), ITER=1,NDIM)
        WRITE(1,FORMAT01) 'KINETIC ENERGY', ':', ENERGY_T
        WRITE(1,FORMAT01) 'POTENTIAL ENERGY', ':', ENERGY_V
        WRITE(1,FORMAT01) 'TOTAL ENERGY', ':', ENERGY
        WRITE(1,FORMAT01) 'INST. TEMPERATURE', ':', INST_TEMP
        WRITE(1,*)
	CLOSE(1)
	!OPENS ENERGYFILE AND TRAJFILE.
	OPEN(UNIT=1, FILE = ENERGYFILE, STATUS = 'OLD',
     &  POSITION = 'APPEND')
	OPEN(UNIT=2, FILE = TRAJFILE, STATUS = 'OLD',
     &  POSITION = 'APPEND')
	!PRINTS ENERGY.
	CALL GET_ENERGY
	WRITE(1,*) TIME, ENERGY_T, ENERGY_V, ENERGY, INST_TEMP
	!PRINTS TRAJECTORY.
	WRITE(2,*) TIME, (POS(ITER), ITER=1,NDIM),
     &	(VEL(ITER), ITER=1,NDIM), (ACCL(ITER), ITER=1,NDIM)
	CLOSE(2)
	CLOSE(1)
	RETURN
	END SUBROUTINE


	!SUBROUTINE *) PRINT_RESTART
	!THIS SUBROUTINE PRINTS THE DYNAMIC VARIABLES OF LAST ITERATION IN THE RESTART_MOLDYN FILE.
	SUBROUTINE PRINT_RESTART
        USE PARAM
        USE UMBRSAMP
        USE METADYN
        USE CONSTANTS
        USE FORCEFIELD
        USE DYNAMICS_MOLDYN
        IMPLICIT NONE
        INTEGER ITER1, ITER2
	CHARACTER (LEN=50) FILE1, FILE2, FILE3
	!ASSIGNS NAMES OF RESTART FILES.
	FILE1 = 'RESTART/RESTART_MOLDYN'
	FILE2 = 'RESTART/RESTART_UMBSAM'
	FILE3 = 'RESTART/RESTART_METDYN'
	!CREATES MOLDYN RESTART FILE.
	OPEN(UNIT=1, FILE=FILE1, STATUS='UNKNOWN')
	!PRINTS POSITION, VELOCITY AND ACCLERATION.
	WRITE(1,*) (POS(ITER1),ITER1=1,NDIM)
	WRITE(1,*) (VEL(ITER1), ITER1=1,NDIM)
	WRITE(1,*) (ACCL(ITER1), ITER1=1,NDIM)
	WRITE(1,*) TIME
	CLOSE(1)
	RETURN
	END SUBROUTINE

	!SUBROUTINE *) PRINT_CV
	!THIS SUBROUTINE PRONTS THE CV AS A FUNCTION OF TIME.
	SUBROUTINE PRINT_CV
	USE PARAM
        USE UMBRSAMP
        USE METADYN
        USE CONSTANTS
        USE FORCEFIELD
        USE DYNAMICS_MOLDYN
        IMPLICIT NONE
	INTEGER ITER
	!PRINTS CV TIME SERIES FOR UMBRELLA SAMPLING.
	IF (UMBR .EQV. .TRUE.) THEN  
		OPEN(UNIT=1, FILE=UMBR_FILENAME, STATUS='OLD',
     &		POSITION = 'APPEND')
		IF(META .EQV. .TRUE.) THEN
			WRITE(1,*) ITER_MOLDYN, (POS(UMBR_COMP(ITER)),
     &			 ITER=1,UMBR_DIM),
     &			(POS(META_CV(ITER)), ITER=1,META_DIM), META_COUNT
		ELSE
			WRITE(1,*) ITER_MOLDYN, (POS(UMBR_COMP(ITER)),
     &			 ITER=1,UMBR_DIM)
		ENDIF
		CLOSE(1)
		IF(ITER_MOLDYN .EQ. 1) THEN
			OPEN(UNIT=1, FILE='UMBRELLA_SAMPLING/INPUT', STATUS='OLD',
     &			POSITION = 'APPEND')
			IF( META .EQV. .TRUE.) 
     &			WRITE(1,*) META_FILENAME
			WRITE(1,*) UMBR_FILENAME
			WRITE(1,*) (UMBR_MEAN(ITER), 
     &			ITER=1,UMBR_DIM), (UMBR_K(ITER), 
     &			ITER=1,UMBR_DIM)
        		CLOSE(1)
		ENDIF
	!PRINTS CV TIME SERIES FOR METADYNAMICS.
	ELSEIF( META .EQV. .TRUE. ) THEN
		OPEN(UNIT=1, FILE='METADYNAMICS/META_CV', 
     &		STATUS='OLD', POSITION = 'APPEND')
		WRITE(1,*) ITER_MOLDYN, (POS(META_CV(ITER)),
     &		ITER=1,META_DIM), META_COUNT
		CLOSE(1)
	ENDIF
	RETURN
	END SUBROUTINE
